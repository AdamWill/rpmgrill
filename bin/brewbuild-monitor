#!/usr/bin/python
#
# brewbuild-monitor - watch the brew message bus, listening for new builds
#
import qpid.messaging
import qpid.datatypes
import sys
import os
import optparse
import pprint
import logging

def timestamp():
    import time
    return time.strftime("%Y-%m-%dT%H:%M:%S", time.localtime())

logging.basicConfig()

mechanism = 'PLAIN'
url = 'amqps://guest/guest@qpid.devel.redhat.com'
conn = qpid.messaging.Connection.establish(url, sasl_mechanisms=mechanism)

session = conn.session()
queue_name = 'tmp.koji-events-client-brewlint'
receiver = session.receiver(queue_name + '; { create: receiver, ' +
                            '      node: { type: queue, durable: True, ' +
                            ' x-declare: { exclusive: True, auto-delete: False }, ' +
                            'x-bindings: [ {  exchange: "brew.events", queue: "' + queue_name + '", ' +
                            '                arguments: { x-match: all, type: TaskStateChange, attribute: state, old: OPEN } } ] } }')

try:
    while True:
        message = receiver.fetch()
        content = message.content

        # message.properties is a struct with:
        #
        #  attribute : state       [ completion_ts, host_id, weight ]
        #  type      : TaskStateChange
        #  method    : buildNotification    [ build, buildArch, ... ]
        #  old       : OPEN                 [ FREE                  ]
        #  new       : CLOSED               [ FAILED, CANCELED      ]
        #
        # [ brackets ] indicate other values of possible interest.
        # 'method' seems to be the most interesting.  Other values
        # are: createAppliance, tagNotification, tagBuild, buildSRPMFromSCM,
        # newRepo, createrepo, runroot.
        #
#        print 'props:', message.properties
        if message.properties.get('method') == 'buildNotification':
            # content contains only one element, 'info'
            #{u'info':
            #   {u'weight': 0.10000000000000001,
            #    u'parent': None,
            #    u'completion_time': u'2011-04-28 00:39:32.271031',
            #    u'request': [
            #          [u'mikem@redhat.com', u'dledford@redhat.com', u'dgregor@redhat.com', u'pgampe@redhat.com'],
            #          {
            #           u'owner_name': u'dledford',
            #           u'package_name': u'ibutils',
            #           u'task_id': 3283931,
            #           u'owner_id': 184,
            #           u'id': 163544,
            #           u'creation_event_id': 3824413,
            #           u'creation_time': u'2011-04-28 00:32:13.523669',
            #           u'state': 1,
            #           u'name': u'ibutils',
            #           u'completion_time': u'2011-04-28 00:39:23.734309',
            #           u'epoch': None,
            #           u'version': u'1.5.4',
            #           u'volume_name': u'DEFAULT',
            #           u'release': u'3.el6',
            #           u'creation_ts': 1303965133.52367,
            #           u'completion_ts': 1303965563.7343099,
            #           u'package_id': 3409,
            #           u'volume_id': 0,
            #           u'nvr': u'ibutils-1.5.4-3.el6'
            #          },
            #          {
            #           u'dest_tag': 2797,
            #           u'build_tag': 3084,
            #           u'build_tag_name': u'RHEL-6.1-build',
            #           u'dest_tag_name': u'RHEL-6.1-candidate',
            #           u'id': 734,
            #           u'name': u'RHEL-6-candidate'
            #          },
            #          u'https://brewweb.devel.redhat.com/'
            #         ],
            #    u'start_time': u'2011-04-28 00:39:26.472582',
            #    u'start_ts': 1303965566.47258,
            #    u'state': 2,
            #    u'awaited': None,
            #    u'label': None,
            #    u'priority': 20,
            #    u'channel_id': 1,
            #    u'waiting': None,
            #    u'create_time': u'2011-04-28 00:39:23.734309',
            #    u'id': 3283940,
            #    u'create_ts': 1303965563.7343099,
            #    u'owner': 1163,
            #    u'host_id': 82,
            #    u'completion_ts': 1303965572.2710299,
            #    u'arch': u'noarch',
            #    u'method': u'buildNotification',
            #    u'result': u'sent notification of build 163544 to: mikem@redhat.com, dledford@redhat.com, dgregor@redhat.com, pgampe@redhat.com'
            #   },
            #  u'attribute': u'state',
            #  u'old': u'OPEN',
            #  u'new': u'CLOSED'
            # }
            # content['info'] contains a handful of elements, but the only
            # one we care about is 'request'.
            #
            # content['info']['request'] is a list with three elements:
            #
            #    0: [ list of email addresses ],
            #    1: { details about the n-v-r },
            #    2: { details about the brew build and tag }
            #
            # Example:
            #
            #   ['mikem@redhat.com', 'pgampe@', ..., 'abeekhof@redhat.com'],
            #   {
            #       nvr        : 'mingw32-binutils-2.20.1-2.el6.2',
            #       name       : 'mingw32-binutils',
            #       version    : '2.20.1',
            #       release    : '2.el6.2',
            #       owner_name : 'abeekhof',
            #       task_id    : 2997197,
            #       state      : 1          (1 = success, 3 = fail???)
            #   },
            #   {
            #      build_tag      : 3084,
            #      build_tag_name : 'RHEL-6.1-build',
            #      dest_tag       : 2797,
            #      dest_tag_name  : 'RHEL-6.1-candidate',
            #      id             : 734,
            #      name           : 'RHEL-6-candidate'
            #   },
            #
            # FIXME: I don't see a way to hear about scratch builds.
            req = content['info']['request']
            print timestamp()," >> ",req[1]['nvr']," : state= ",req[1]['state'],
            sys.stdout.flush()
            if req[1]['state'] == 1:
                print "...",
                sys.stdout.flush()
                os.system("bin/run-analysis %s" % req[1]['nvr'])
                print "done",
                sys.stdout.flush()
            print "\n"
            sys.stdout.flush()
#            if req[1][state] == 1:
#                pprint.pprint(req)
        session.acknowledge(message)
except KeyboardInterrupt:
    pass

session.close()
conn.close()


#
# Whee.  Got interesting fields: info > request > {nvr, task_id}
